service: metal-archives-api

provider: 
  name: aws
  runtime: nodejs8.10
  region: eu-west-1
  stage: ${opt:stage, 'dev'}
  profile: ${file(./deploy/config.${self:provider.stage}.js):getEnvVars.AWS_PROFILE}
  environment:
    SCRAPER_URL: ${file(./deploy/config.${self:provider.stage}.js):getEnvVars.SCRAPER_URL}
    MONGODB_URI: ${file(./deploy/config.${self:provider.stage}.js):getEnvVars.MONGODB_URI}
    ELASTICSEARCH_URL: ${file(./deploy/config.${self:provider.stage}.js):getEnvVars.ELASTICSEARCH_URL}
    PORT: ${file(./deploy/config.${self:provider.stage}.js):getEnvVars.PORT}
    SENTRY_KEY: ${file(./deploy/config.${self:provider.stage}.js):getEnvVars.SENTRY_KEY}
    ENVIRONMENT: ${file(./deploy/config.${self:provider.stage}.js):getEnvVars.ENVIRONMENT}
  iamRoleStatements:
      - Effect: Allow
        Action: "*"
        Resource: "*"

package:
  exclude: 
    - .git/**
    - data/**

functions:

  get-band:
    handler: src/bandHandler.getBand
    memorySize: 128
    description: Get band
    timeout: 12
    events:
      - http: 
          path: bands/{bandName}/{id}
          method: get
          request:
            parameters: 
              paths: 
                bandName: true
                id: true

  get-album:
    handler: src/albumHandler.getAlbum
    memorySize: 128
    description: Get album
    events:
      - http: 
          path: albums/{albumId}
          method: get
          request: 
            parameters: 
              paths: 
                albumId: true

  search:
    handler: src/searchHandler.search
    memorySize: 128
    description: Search for band or album name
    timeout: 12
    events:
      - http: 
          path: search/{query}
          method: get
          request: 
            parameters: 
              paths: 
                query: true

# Admin functionality

  count-bands:
    handler: src/statisticsHandler.countBands
    memorySize: 128
    description: Count bands, all of them or for a specific letter
    timeout: 30
    events:
      - http: 
          path: count-bands/{letter}
          method: get
          request: 
            parameters: 
              paths: 
                letter: true

  crawl-letter:
    handler: src/crawler.crawlLetter
    memorySize: 128
    description: Crawl all bands starting with a certain letter
    events:
      - http:
          path: crawl-letter/{letter}
          method: get
          request:
            parameters:
              paths:
                letter: true

  add-band:
    handler: src/bandHandler.addBandToDatabase
    memorySize: 128
    description: Add a specific band to database
    events:
      - http:
          path: add-band
          method: post
